class Elm_Code_Widget (Elm_Box, Elm_Interface_Scrollable,
                       Elm_Interface_Atspi_Text)
{
   eo_prefix: elm_code_widget;
   properties {
      code {
         set {
            /*@
            Set the underlying code object that this widget renders

            @ingroup Data */
         }
         get {
            /*@
            Get the underlying code object we are rendering

            @ingroup Data */
         }
         values {
            Elm_Code *code; /*@ Our underlying Elm_Code object */
         }
      }
      font_size {
         set {
            /*@
            Set the font size that this widget uses, the font will always be a system monospaced font

            @ingroup Style */
         }
         get {
            /*@
            Get the font size currently in use

            @ingroup Style */
         }
         values {
            Evas_Font_Size font_size; /*@ The font size of the widgget */
         }
      }
      editable {
         set {
            /*@
            Set whether this widget allows editing

            If @a editable then the widget will allow user input to manipulate
            the underlying Elm_Code_File of this Elm_Code instance.
            Any other Elm_Code_Widget's connected to this Elm_Code will
            update to reflect the changes.

            @ingroup Features */
         }
         get {
            /*@
            Get the current editable state of this widget

            @return EINA_TRUE if the widget is editable, EINA_FALSE otherwise.
            If this widget is not editable the underlying Elm_Code_File could
            still be manipulated by a different widget or the filesystem.

            @ingroup Features */
         }
         values {
            Eina_Bool editable; /*@ The editable state of the widget */
         }
      }
   }
   methods {
   }
   implements {
      class.constructor;
      Eo.Base.constructor;
      Evas.Object_Smart.add;
      Elm_Widget.on_focus;
      Elm_Interface_Scrollable.content_pos_set;
   }
   events {
      line,clicked;
   }

}
